[build-system]
build-backend = "mesonpy"
requires = [
    "meson",
    "meson-python", 
    "wheel", 
    "numpy>=2.0; python_version>'3.8'",
    "oldest-supported-numpy; python_version<='3.8'",
]

[project]
name = "coilpy"
dynamic = ["version"]
description = "Plotting and data processing tools for plasma and coil"
readme = "README.md"
authors = [
    { name = "Caoxiang Zhu", email = "caoxiangzhu@gmail.com" },
]
maintainers = [
    { name = "Caoxiang Zhu", email = "caoxiangzhu@gmail.com" },
]
license = {text = "GNU 3.0"}
classifiers = [
    "Development Status :: 3 - Alpha",
    "License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)",
    "Programming Language :: Python :: 3",
    "Topic :: Scientific/Engineering",
]
dependencies = [
    "scipy",
    "xarray",
    "h5py",
    "matplotlib",
    "pandas",
    "plotly",
    "numpy",
    "pyevtk",
    "classes",
    "f90nml",
    "meshio",
]

[tool.cibuildwheel]
build = "*"
skip = ["cp3{6,7,8}-*", "pp*", "*-win32"]
test-skip = ""
free-threaded-support = false

archs = ["auto"]
build-frontend = "default"
config-settings = {}
dependency-versions = "pinned"
environment = {}
environment-pass = []
build-verbosity = 0

before-all = ""
before-build = ""
repair-wheel-command = ""

test-command = ""
before-test = ""
test-requires = []
test-extras = []

container-engine = "docker"

manylinux-x86_64-image = "manylinux2014"
manylinux-i686-image = "manylinux2014"
manylinux-aarch64-image = "manylinux2014"
manylinux-ppc64le-image = "manylinux2014"
manylinux-s390x-image = "manylinux2014"
manylinux-pypy_x86_64-image = "manylinux2014"
manylinux-pypy_i686-image = "manylinux2014"
manylinux-pypy_aarch64-image = "manylinux2014"

musllinux-x86_64-image = "musllinux_1_2"
musllinux-i686-image = "musllinux_1_2"
musllinux-aarch64-image = "musllinux_1_2"
musllinux-ppc64le-image = "musllinux_1_2"
musllinux-s390x-image = "musllinux_1_2"


[tool.cibuildwheel.linux]
repair-wheel-command = "auditwheel repair -w {dest_dir} {wheel}"

# [tool.cibuildwheel.macos]
# repair-wheel-command = "delocate-wheel --require-archs {delocate_archs} -w {dest_dir} -v {wheel}"

[tool.cibuildwheel.windows]

[tool.cibuildwheel.pyodide]