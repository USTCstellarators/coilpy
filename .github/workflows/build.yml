name: build-publish
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
jobs:
  focus-build:
    runs-on: ubuntu-latest
    name: CoilPy build
    steps:
    - uses: actions/checkout@v2

    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    # - name: Get pip cache dir
    #   id: pip-cache
    #   run: |
    #     echo "::set-output name=dir::$(pip cache dir)"

    # - name: Cache pip
    #   uses: actions/cache@v2
    #   id: cache-pip
    #   with:
    #     # This path is specific to Ubuntu
    #     path: ${{ steps.pip-cache.outputs.dir }}
    #     # Look to see if there is a cache hit for the corresponding requirements file
    #     key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}

    # - name: Install dependencies
    #   if: steps.cache-pip.outputs.cache-hit != 'true'
    #   run: |
    #     python -m pip install --upgrade pip
    #     pip install -r requirements.txt
    #     pip install setuptools wheel twine   

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install setuptools wheel twine 
        pip install sphinx

    - name: Build coilpy
      run: |
        echo "install coilpy"
        pip --version
        pip install -e ${GITHUB_WORKSPACE}
        python3 -c "from coilpy import *"

    - name: Cache publish
      uses: actions/cache@v2
      id: cache-pypi
      with:
        # This path is specific to Ubuntu
        path: ${{ github.workspace }}
        # Look to see if there is a cache hit for the corresponding requirements file
        key: ${{ runner.os }}-pypi-${{ hashFiles('coilpy/__init__.py') }}

    - name: publish to PYPI
      if: steps.cache-pypi.outputs.cache-hit != 'true'
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        python setup.py sdist bdist_wheel
        twine upload dist/*

    - name: Update documentation
      run: |
        cd ./docs
        make docs html

    - name: Deploy
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./docs/_build/html
