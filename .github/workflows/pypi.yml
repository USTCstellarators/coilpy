name: Pypi Publish

on:
  push:
    branches:
      - master

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-2019, macOS-10.15]

    steps:
      - uses: actions/checkout@v2

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.2.2
        env:
          # Only build for python 3.{7,8,9}
          CIBW_BUILD : cp38-* cp39-*
          # Use manylinux2014
          CIBW_MANYLINUX_I686_IMAGE: manylinux2014
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
          # h5py doesn't support 32 bit windows
          CIBW_ARCHS: auto64
          CIBW_BEFORE_BUILD: pip install -r requirements.txt # pip install --upgrade pip setuptools wheel twine ;

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl


  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2
        
      - name: Build sdist
        run: pipx run build --sdist
        
      - uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz


  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-20.04
    steps:
      - name: Cache publish
        uses: actions/cache@v2
        id: cache-pypi
        with:
          # This path is specific to Ubuntu
          path: ${{ github.workspace }}
          # Look to see if there is a cache hit for the corresponding requirements file
          key: ${{ runner.os }}-pypi-${{ hashFiles('coilpy/__init__.py') }}

      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@master
        if: steps.cache-pypi.outputs.cache-hit != 'true'  # should use git tags or github releases!
        with:
          user: ${{ secrets.PYPI_USERNAME }}  # should be __token__
          password: ${{ secrets.PYPI_PASSWORD }}
